#login
get.user.by.username=SELECT "user".user_id, "user".username, "user".password, "user_role".user_role_name, "locale".locale_name, \
  "user".full_name, "user".email, "user".address, "user".telephone_number \
  FROM public."user" \
  INNER JOIN public."user_role"  \
  ON "user_role".user_role_id="user".user_role_id \
  INNER JOIN public."locale" \
  ON "locale".locale_id="user".locale_id \
  WHERE "user".username=?;
#registration
insert.user=INSERT INTO "user" \
(user_role_id, username, password, locale_id) VALUES ((SELECT "user_role".user_role_id \
FROM public."user_role" \
WHERE "user_role".user_role_name=?),?, ?, (SELECT "locale".locale_id \
FROM public."locale" WHERE "locale".locale_name=?));
#change locale
update.user.locale=UPDATE "user" SET locale_id = (SELECT locale_id FROM locale WHERE locale.locale_name = ?) WHERE "user".username = ?;
#update personal info
update.user.personal.info=UPDATE "user" SET full_name = ?, email = ?, address= ?, telephone_number= ? WHERE username = ?;
#
get.orders.by.userid=SELECT "order".order_id,  "order".total_price, "order_status"."order_status_name" \
  FROM "order" INNER JOIN public."order_status" ON "order"."order_status_id" = "order_status"."order_status_id"\
  WHERE "order"."user_id" = ?;
#get books all
get.books.all=SELECT "book".book_id, "book".isbn, "book".title, "book".author,"book".description, "book".price FROM public."book" LIMIT 10 OFFSET ?;
#get total amount of books
get.books.amount=SELECT "book".book_id, "book".isbn, "book".title, "book".author,"book".description, "book".price FROM public."book";
#get books by title
get.books.by.title=SELECT "book".book_id, "book".isbn, "book".title, "book".author,"book".description, "book".price FROM public."book"WHERE UPPER("book".title) LIKE UPPER(?) LIMIT 10 OFFSET ?;
#get book by id
get.book.by.id=SELECT "book".book_id, "book".isbn, "book".title, "book".author, "book".description, "book".price FROM public."book" WHERE "book".book_id = ?;
#
make.order=INSERT INTO "order" (user_id, order_status_id, total_price) VALUES (?, (SELECT order_status_id FROM public."order_status" WHERE order_status_name = ?), ?);
        #
insert.bookordered=INSERT INTO "order_items" (order_id, book_id, quantity) VALUES (?, ?, ?);